{"version":3,"sources":["contexts/CurrentUserContext.js","components/ProtectedRoute.js","utils/api.js","utils/auth.js","images/button.svg","components/Card.js","images/logo.svg","components/Header.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmPopup.js","images/union.svg","images/img-fail.svg","components/InfoTooltip.js","components/Register.js","components/Login.js","components/App.js","reportWebVitals.js","index.js"],"names":["CurrentUserContext","React","createContext","ProtectedRoute","Component","component","props","loggedIn","to","onError","res","ok","json","Promise","reject","status","api","options","this","baseUrl","headers","fetch","authorization","localStorage","getItem","then","data","method","body","JSON","stringify","name","link","about","id","avatar","isLiked","BASE_URL","checkResponse","Card","card","currentUser","useContext","isOwn","owner","_id","likes","some","i","cardDeleteButtonClassName","cardLikeButtonClassName","className","type","onClick","onCardDelete","src","alt","onCardClick","onCardLike","length","Header","useState","isOpenMenu","setIsOpenMenu","userEmail","onLogOut","linkTitle","logo","document","querySelector","classList","toggle","linkRoute","Main","onEditAvatar","onEditProfile","onAddPlace","Button","cards","map","item","Footer","Date","getFullYear","ImagePopup","selectedCard","onClose","e","stopPropagation","PopupWithForm","isOpen","title","noValidate","onSubmit","children","EditProfilePopup","description","userData","setUserData","handleChange","target","value","useEffect","preventDefault","onUpdateUser","required","minLength","maxLength","onChange","isLoading","EditAvatarPopup","avatarRef","useRef","current","onUpdateAvatar","reset","placeholder","ref","AddPlacePopup","setData","ConfirmPopup","InfoTooltip","isSignUp","ImgSuccess","ImgError","Register","password","email","onRegister","autoComplete","onInfoTooltip","Login","onLogin","withRouter","setCurrentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","setSelectedCard","removedCard","setRemovedCard","setCards","setIsloading","setEmail","setIsSignUp","setLoggedIn","history","useHistory","tokenCheck","jwt","token","Accept","Authorization","push","catch","console","log","closeAllPopups","all","getUserInfo","getInitialCards","initialCards","err","handleEsc","evt","key","window","addEventListener","removeEventListener","Provider","exact","path","changeLikeCardStatus","newCard","state","c","removeItem","auth","setItem","deleteCard","filter","finally","setUserInfo","setUserAvatar","postCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.46b45db1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n// этот компонент принимает другой компонент в качестве пропса\r\n// он также может взять неограниченное число пропсов и передать их новому компоненту\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  return (\r\n    <Route>\r\n      {() =>\r\n        props.loggedIn ? <Component {...props} /> : <Redirect to=\"./sign-in\" />\r\n      }\r\n    </Route>\r\n  )};\r\n\r\nexport default ProtectedRoute; ","const onError = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\nclass Api {\r\n  constructor(options) {\r\n    this.baseUrl = options.baseUrl;\r\n    this.headers = options.headers;\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      headers: {\r\n        ...this.headers,\r\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    }).then(onError);\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      headers: {\r\n        ...this.headers,\r\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    }).then(onError);\r\n  }\r\n\r\n  postCard(data) {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        ...this.headers,\r\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link,\r\n      }),\r\n    }).then(onError);\r\n  }\r\n\r\n  setUserInfo({ name, about }) {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        ...this.headers,\r\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about,\r\n      }),\r\n    }).then(onError);\r\n  }\r\n\r\n  deleteCard(id) {\r\n    return fetch(`${this.baseUrl}/cards/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        ...this.headers,\r\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    }).then(onError);\r\n  }\r\n\r\n  addLike(id) {\r\n    return fetch(`${this.baseUrl}/cards/likes/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        ...this.headers,\r\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    }).then(onError);\r\n  }\r\n\r\n  deleteLike(id) {\r\n    return fetch(`${this.baseUrl}/cards/likes/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        ...this.headers,\r\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    }).then(onError);\r\n  }\r\n\r\n  setUserAvatar(link) {\r\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        ...this.headers,\r\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: link,\r\n      }),\r\n    }).then(onError);\r\n  }\r\n\r\n  changeLikeCardStatus(id, isLiked) {\r\n    return fetch(`${this.baseUrl}/cards/${id}/likes`, {\r\n      method: isLiked ? \"PUT\" : \"DELETE\",\r\n      headers: {\r\n        ...this.headers,\r\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    }).then(onError);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: \"https://api.mesto.nomoredomains.rocks\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n","export const BASE_URL = \"https://api.mesto.nomoredomains.rocks\";\r\n\r\nconst checkResponse = (res) =>\r\n  res.ok ? res.json() : Promise.reject(res);\r\n\r\nexport const register = ({ email, password }) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n})\r\n.then(checkResponse)\r\n};\r\n\r\nexport const getContent = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }).then(checkResponse);\r\n};","export default __webpack_public_path__ + \"static/media/button.d5d6f8af.svg\";","import { useContext } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nconst Card = (props) => {\r\n  const { card } = props;\r\n  const currentUser = useContext(CurrentUserContext);\r\n  \r\n  const isOwn = card.owner === currentUser._id;\r\n  const isLiked = card.likes.some((i) => i === currentUser._id);\r\n  const cardDeleteButtonClassName = `card__btn-remove ${\r\n    isOwn ? \"card__btn-remove_active\" : \"\"\r\n  }`;\r\n  const cardLikeButtonClassName = `card__like-button ${\r\n    isLiked ? \"card__like-button_active\" : \"\"\r\n  }`;\r\n\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card);\r\n  }\r\n\r\n  function handleCardDelete() {\r\n    props.onCardDelete(props.card);\r\n  }\r\n\r\n  return (\r\n    <figure className=\"card__item\">\r\n      <button\r\n        className={cardDeleteButtonClassName}\r\n        type=\"button\"\r\n        onClick={handleCardDelete}\r\n      ></button>\r\n      <img\r\n        className=\"card__photo\"\r\n        src={card.link}\r\n        alt={card.name}\r\n        onClick={handleClick}\r\n      />\r\n      <figcaption className=\"card__caption\">\r\n        <h2 className=\"card__title\">{card.name}</h2>\r\n        <div className=\"card__like\">\r\n          <button\r\n            className={cardLikeButtonClassName}\r\n            type=\"button\"\r\n            onClick={handleLikeClick}\r\n          ></button>\r\n          <h2 className=\"card__like-counter\">{card.likes.length}</h2>\r\n        </div>\r\n      </figcaption>\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","export default __webpack_public_path__ + \"static/media/logo.6129e9de.svg\";","import logo from \"../images/logo.svg\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  const [isOpenMenu, setIsOpenMenu] = useState(false);\r\n\r\n  //функция нажатия на кнопку меню\r\n  function handleNavBar() {\r\n    if (!isOpenMenu) {\r\n      setIsOpenMenu(true);\r\n      document\r\n        .querySelector(\".header__nav-icon-item\")\r\n        .classList.toggle(\"header__nav-icon-item_open\");\r\n    } else {\r\n      setIsOpenMenu(false);\r\n      document\r\n        .querySelector(\".header__nav-icon-item\")\r\n        .classList.toggle(\"header__nav-icon-item_open\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Если произошло нажатие на кнопку меню - отрисовка меню вверху страницы */}\r\n      {isOpenMenu && (\r\n        <div className=\"header__open-menu\">\r\n          <h2 className=\"header__user-email header__user-email_menu\">\r\n            {props.userEmail}\r\n          </h2>\r\n          <Link\r\n            className=\"header__link header__link_menu \"\r\n            onClick={props.onLogOut}\r\n            to=\"/sign-in\"\r\n          >\r\n            {props.linkTitle}\r\n          </Link>\r\n        </div>\r\n      )}\r\n\r\n      <header className=\"header page__header\">\r\n        <div className=\"header__container\">\r\n          <img className=\"logo\" src={logo} alt=\"Логотип Место\" />\r\n        </div>\r\n        {/* Если пользователь авторизирован - отрисовка кнопки меню на экранах меньше 1024\r\n            или email и кнопка выйти на экранах больше 1024 */}\r\n        {props.loggedIn ? (\r\n          <>\r\n            <div className=\"header__nav-icon\" onClick={handleNavBar}>\r\n              <span className=\"header__nav-icon-item\"></span>\r\n            </div>\r\n\r\n            <div className=\"header__navbar\">\r\n              <h2 className=\"header__user-email\">{props.userEmail}</h2>\r\n              <Link\r\n                className=\"header__link header__link_desktop\"\r\n                onClick={props.onLogOut}\r\n                to=\"/sign-in\"\r\n              >\r\n                {props.linkTitle}\r\n              </Link>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <Link\r\n            className=\"header__link\"\r\n            onClick={props.onLogOut}\r\n            to={props.linkRoute}\r\n          >\r\n            {props.linkTitle}\r\n          </Link>\r\n        )}\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { useContext } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport Button from \"../images/button.svg\";\r\nimport Card from \"./Card\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Main(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        loggedIn={props.loggedIn}\r\n        userEmail={props.userEmail}\r\n        linkTitle=\"Выйти\"\r\n        linkRoute=\"/sign-in\"\r\n        onLogOut={props.onLogOut}\r\n      />\r\n      <main className=\"content\">\r\n        <section className=\"profile page__profile\">\r\n          <div className=\"profile__image\">\r\n            <img\r\n              className=\"profile__avatar\"\r\n              src={currentUser.avatar}\r\n              alt=\"Аватар\"\r\n            />\r\n            <button\r\n              className=\"profile__edit-avatar\"\r\n              type=\"button\"\r\n              onClick={props.onEditAvatar}\r\n            ></button>\r\n          </div>\r\n          <div className=\"profile__info\">\r\n            <h1 className=\"profile__name\" id=\"name\">\r\n              {currentUser.name}\r\n            </h1>\r\n            <button\r\n              className=\"profile__edit-button\"\r\n              type=\"button\"\r\n              onClick={props.onEditProfile}\r\n            ></button>\r\n            <p className=\"profile__job\">{currentUser.about}</p>\r\n          </div>\r\n          <button\r\n            className=\"profile__add-button\"\r\n            type=\"button\"\r\n            onClick={props.onAddPlace}\r\n          >\r\n            <img\r\n              className=\"button button_add\"\r\n              src={Button}\r\n              alt=\"Кнопка добавить\"\r\n            />\r\n          </button>\r\n        </section>\r\n        <section className=\"cards page__cards\">\r\n          {props.cards.map((item) => (\r\n            <Card\r\n              onCardClick={props.onCardClick}\r\n              key={item._id}\r\n              card={item}\r\n              onCardLike={props.onCardLike}\r\n              onCardDelete={props.onCardDelete}\r\n            />\r\n          ))}\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","function Footer() {\r\n  return (\r\n    <footer className=\"footer page__footer\">\r\n      <p className=\"footer__copyright\">&copy; {new Date().getFullYear()} Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import Button from \"../images/button.svg\";\r\nfunction ImagePopup(props) {\r\n  const selectedCard = props.card;\r\n  return (\r\n    <div\r\n      className={`popup popup_image ${selectedCard ? \"popup_opened\" : \"\"}`}\r\n      onClick={props.onClose}\r\n    >\r\n      <figure\r\n        className=\"popup__container popup__container_image\"\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <button\r\n          className=\"popup__button-close popup__button-close_image\"\r\n          type=\"button\"\r\n        >\r\n          <img\r\n            className=\"button button_close\"\r\n            src={Button}\r\n            alt=\"Кнопка закрыть\"\r\n            onClick={props.onClose}\r\n          />\r\n        </button>\r\n        <img\r\n          className=\"popup__photo\"\r\n          src={selectedCard ? `${selectedCard.link}` : \"#\"}\r\n          alt={selectedCard ? `${selectedCard.name}` : \"\"}\r\n        />\r\n        <figcaption className=\"popup__caption\">\r\n          {selectedCard ? `${selectedCard.name}` : \"\"}\r\n        </figcaption>\r\n      </figure>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import Button from \"../images/button.svg\";\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <div\r\n      className={`popup popup_${props.name} ${\r\n        props.isOpen && \"popup_opened\" }`}\r\n      onClick={props.onClose}\r\n    >\r\n      <div\r\n        className={`popup__container popup__container_${props.name}`}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <button\r\n          className=\"popup__button-close\"\r\n          type=\"button\"\r\n          onClick={props.onClose}\r\n        >\r\n          <img\r\n            className=\"button button_close\"\r\n            src={Button}\r\n            alt=\"Кнопка закрыть\"\r\n          />\r\n        </button>\r\n        <h2 className={`popup__title popup__title_${props.name}`}>{props.title}</h2>\r\n        <form\r\n          className={`form form_${props.name}`}\r\n          name=\"form\"\r\n          noValidate\r\n          onSubmit={props.onSubmit}\r\n        >\r\n          {props.children}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditProfilePopup(props) {\r\n  const [userData, setUserData] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  // Подписка на контекст\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  // Загрузка данных текущего пользователя в инпуты\r\n  useEffect(() => {\r\n    setUserData({\r\n      name: currentUser.name,\r\n      description: currentUser.about,\r\n    });\r\n  }, [currentUser]);\r\n\r\n  // Обработка инпутов\r\n  function handleChange(e) {\r\n    setUserData({\r\n      ...userData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  // Передача значения управляемых компонентов во внешний обработчик\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onUpdateUser({\r\n      name: userData.name,\r\n      about: userData.description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"profile\"\r\n      title=\"Редактировать профиль\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className=\"form__field\">\r\n        <input\r\n          className=\"form__input form__input_type_name\"\r\n          id=\"name-input\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"40\"\r\n          value={userData.name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label className=\"form__field\">\r\n        <input\r\n          className=\"form__input form__input_type_job\"\r\n          value={userData.description}\r\n          onChange={handleChange}\r\n          id=\"job-input\"\r\n          type=\"text\"\r\n          name=\"description\"\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"200\"\r\n        />\r\n        <span className=\"popup__error\" id=\"job-input-error\"></span>\r\n      </label>\r\n      <button className=\"form__button-submit\" type=\"submit\">\r\n        {props.isLoading ? \"Сохранение\" : \"Сохранить\"}\r\n      </button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\nexport default EditProfilePopup;\r\n","import { useRef, useEffect } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const avatarRef = useRef();\r\n\r\n  // очистка инпута перед открытием попапа\r\n  useEffect(() => {\r\n    if (props.isOpen) {\r\n      avatarRef.current.value = '';\r\n    }\r\n  }, [props.isOpen]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onUpdateAvatar({\r\n      avatar: avatarRef.current.value,\r\n    });\r\n    e.target.reset();\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"avatar\"\r\n      title=\"Обновите аватар\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className=\"form__field\">\r\n        <input\r\n          className=\"form__input form__input_type_link\"\r\n          id=\"link-photo-input\"\r\n          type=\"url\"\r\n          name=\"link\"\r\n          placeholder=\"Ссылка на фото\"\r\n          required\r\n          ref={avatarRef}\r\n        />\r\n        <span className=\"popup__error\" id=\"link-photo-input-error\"></span>\r\n      </label>\r\n      <button className=\"form__button-submit\" type=\"submit\">\r\n        {props.isLoading ? \"Сохранение\" : \"Сохранить\"}\r\n      </button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import { useEffect, useState } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n  const [data, setData] = useState({\r\n    title: \"\",\r\n    link: \"\",\r\n  });\r\n\r\n  // Очистка инпутов перед открытием попапа\r\n  useEffect(() => {\r\n    if (props.isOpen) {\r\n      setData({ title: \"\", link: \"\" });\r\n    }\r\n  }, [props.isOpen]);\r\n\r\n  // Обработка инпутов\r\n  function handleChange(e) {\r\n    setData({\r\n      ...data,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  // Передача значения управляемых компонентов во внешний обработчик\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onAddPlace({\r\n      name: data.title,\r\n      link: data.link,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"cards\"\r\n      title=\"Новое место\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className=\"form__field\">\r\n        <input\r\n          className=\"form__input form__input_cards form__input_type_title\"\r\n          id=\"title-input\"\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Название\"\r\n          value={data.title}\r\n          onChange={handleChange}\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n        />\r\n        <span className=\"popup__error\" id=\"title-input-error\"></span>\r\n      </label>\r\n      <label className=\"form__field\">\r\n        <input\r\n          className=\"form__input form__input_cards form__input_type_link\"\r\n          id=\"link-input\"\r\n          type=\"url\"\r\n          name=\"link\"\r\n          placeholder=\"Ссылка на картинку\"\r\n          value={data.link}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <span className=\"popup__error\" id=\"link-input-error\"></span>\r\n      </label>\r\n      <button\r\n        className=\"form__button-submit form__button-submit_cards\"\r\n        type=\"submit\"\r\n      >\r\n        {props.isLoading ? \"Сохранение\" : \"Создать\"}\r\n      </button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction ConfirmPopup(props) {\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onClick(props.card);\r\n  }\r\n  return (\r\n    <PopupWithForm\r\n      name=\"remove-card\"\r\n      title=\"Вы уверены?\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n    >\r\n      <button\r\n        className=\"popup__button-confirm\"\r\n        type=\"button\"\r\n        onClick={handleSubmit}\r\n      >\r\n        {props.isLoading ? \"Удаление\" : \"Да\"}\r\n      </button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\nexport default ConfirmPopup;\r\n","export default __webpack_public_path__ + \"static/media/union.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/img-fail.df8eddf6.svg\";","import PopupWithForm from \"./PopupWithForm\";\r\nimport ImgSuccess from \"../images/union.svg\";\r\nimport ImgError from \"../images/img-fail.svg\";\r\n\r\nfunction InfoTooltip(props) {\r\n  function showInfo() {\r\n    if (props.isSignUp) {\r\n      return (\r\n        <>\r\n          <img className=\"popup__img-info\" src={ImgSuccess} alt=\"succes-img\" />\r\n          <p className=\"popup__caption popup__caption_infotooltip\">\r\n            Вы успешно зарегистрировались!\r\n          </p>\r\n        </>\r\n      );\r\n    }\r\n    if (!props.isSignUp || !props.loggedIn) {\r\n      return (\r\n        <>\r\n          <img className=\"popup__img-info\" src={ImgError} alt=\"fail-img\" />\r\n          <p className=\"popup__caption popup__caption_infotooltip\">\r\n            Что-то пошло не так! Попробуйте ещё раз.\r\n          </p>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <PopupWithForm\r\n      name=\"infotooltip\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n    >\r\n      {showInfo()}\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default InfoTooltip;\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Register(props) {\r\n  const [userData, setUserData] = useState({\r\n    password: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  // Обработка инпутов\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  // Передача значения управляемых компонентов во внешний обработчик\r\n  function handleSubmit(e) {\r\n    let { password, email } = userData;\r\n    e.preventDefault();\r\n    props.onRegister({ password, email });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header linkTitle=\"Войти\" linkRoute=\"/sign-in\" />\r\n      <div className=\"sign page__login\">\r\n        <div className=\"sign__container\">\r\n          <h2 className=\"sign__title\">Регистрация</h2>\r\n          <form className=\"form form_sign\" onSubmit={handleSubmit} noValidate>\r\n            <label className=\"form__field\">\r\n              <input\r\n                className=\"form__input form__input_sign\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={userData.email}\r\n                onChange={handleChange}\r\n                autoComplete=\"off\"\r\n              />\r\n            </label>\r\n            <label className=\"form__field\">\r\n              <input\r\n                className=\"form__input form__input_sign\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Пароль\"\r\n                value={userData.password}\r\n                onChange={handleChange}\r\n                autoComplete=\"off\"\r\n              />\r\n            </label>\r\n            <button\r\n              className=\"form__button-submit form__button-submit_sign\"\r\n              type=\"submit\"\r\n              onClick={props.onInfoTooltip}\r\n            >\r\n              Зарегистрироваться\r\n            </button>\r\n          </form>\r\n          <p className=\"sign__signin-link\">\r\n            Уже зарегистрированы?&nbsp;\r\n            <Link to=\"/sign-in\" className=\"sign__signin-link\">\r\n              Войти\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import { useState } from \"react\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Login(props) {\r\n  const [userData, setUserData] = useState({\r\n    password: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  // Обработка инпутов\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  // Передача значения управляемых компонентов во внешний обработчик\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onLogin(userData);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header linkTitle=\"Регистрация\" linkRoute=\"/sign-up\" />\r\n      <div className=\"sign page__login\">\r\n        <div className=\"sign__container\">\r\n          <h2 className=\"sign__title\">Вход</h2>\r\n          <form className=\"form form_sign\" onSubmit={handleSubmit} noValidate>\r\n            <label className=\"form__field\">\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                autoComplete=\"off\"\r\n                className=\"form__input form__input_sign\"\r\n                value={userData.email}\r\n                onChange={handleChange}\r\n              />\r\n            </label>\r\n            <label className=\"form__field\">\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Пароль\"\r\n                type=\"password\"\r\n                autoComplete=\"off\"\r\n                className=\"form__input form__input_sign\"\r\n                value={userData.password}\r\n                onChange={handleChange}\r\n              />\r\n            </label>\r\n            <button\r\n              className=\"form__button-submit form__button-submit_sign\"\r\n              type=\"submit\"\r\n            >\r\n              Войти\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { useState, useEffect } from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n  useHistory,\n} from \"react-router-dom\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport api from \"../utils/api\";\nimport * as auth from \"../utils/auth\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ConfirmPopup from \"./ConfirmPopup\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState({\n    name: \"\",\n    about: \"\",\n    avatar: \"\",\n  });\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(\"\");\n  const [removedCard, setRemovedCard] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const history = useHistory();\n\n      useEffect(() => {\n        tokenCheck(history);\n      }, [history]);\n\n  const tokenCheck = (history) => {\n      if (localStorage.getItem(\"jwt\")) {\n      let jwt = localStorage.getItem(\"jwt\");\n      auth\n        .getContent(jwt)\n        .then((data) => {\n          if (data.email) {\n            setLoggedIn(true);\n            setEmail(data.email);\n            history.push(\"/\");\n          }\n        })\n        .catch((res) => {\n          if (res.status === 400)\n            console.log(\"Токен не передан или передан не в том формате\");\n          if (res.status === 401) console.log(\"Переданный токен некорректен\");\n        });\n  };\n}\n\n  const handleRegister = ({ email, password }) => {\n    return auth\n      .register({ email, password })\n      .then((res) => {\n        setIsSignUp(true);\n        history.push(\"/sign-in\");\n        return res;\n      })\n      .catch((res) => {\n        setIsSignUp(false);\n        if (res.status === 400) {\n          console.log(\"Некорректно заполнено одно из полей\");\n        }\n      });\n  };\n\n  const handleLogin = ({ email, password }) => {\n    return auth\n      .authorize(email, password)\n      .then((res) => {\n        if (res.token) {\n          setLoggedIn(true);\n          localStorage.setItem(\"jwt\", res.token);\n          setEmail(email);\n          history.push(\"/\");\n          return;\n        }\n      })\n      .catch((res) => {\n        setIsInfoTooltipOpen(true);\n        if (res.status === 400) console.log(\"Не передано одно из полей\");\n        if (res.status === 401) console.log(\"Пользователь с email не найден\");\n      });\n  };\n\n\n\n  const handleLogOut = () => {\n    setLoggedIn(false);\n    localStorage.removeItem(\"jwt\");\n    history.push(\"/sign-in\");\n    setEmail(\"\");\n  };\n\n  // загрузка информации о пользователе и карточек с сервера\n  useEffect(() => {\n  if (loggedIn) {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([userData, initialCards]) => {\n        setCurrentUser(userData);\n        setCards(initialCards);\n      })\n      .catch((err) => console.log(err));}\n  }, [loggedIn]);\n\n  // закрытие поппапов при нажатии на Esc\n  useEffect(() => {\n    function handleEsc(evt) {\n      if (evt.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n    window.addEventListener(\"keydown\", handleEsc);\n    return () => {\n      window.removeEventListener(\"keydown\", handleEsc);\n    };\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleRemoveCardClick(card) {\n    setIsConfirmPopupOpen(true);\n    setRemovedCard(card);\n  }\n\n  function handleInfoTooltip() {\n    setIsInfoTooltipOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setIsInfoTooltipOpen(false);\n    setSelectedCard();\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  // обновление информации о пользователе\n  function handleUpdateUser(item) {\n    setIsloading(true);\n    api\n      .setUserInfo(item)\n      .then((item) => {\n        setCurrentUser(item);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsloading(false));\n  }\n  // обновление аватара\n  function handleUpdateAvatar(item) {\n    setIsloading(true);\n    api\n      .setUserAvatar(item.avatar)\n      .then((item) => {\n        setCurrentUser(item);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsloading(false));\n  }\n  // добавление новой карточки\n  function handleAddPlaceSubmit(item) {\n    setIsloading(true);\n    api\n      .postCard(item)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsloading(false));\n  }\n\n  // функция для постановки лайка\n  function handleCardLike(card) {\n    \n    const isLiked = card.likes.some((i) => i === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch((err) => console.log(err));\n  }\n\n  // функция для удаления карточки\n  function handleCardDelete() {\n    setIsloading(true);\n    // запрос в API на удаление карточки\n    api\n      .deleteCard(removedCard._id)\n      .then(() => {\n        // отрисовка массива карточек без удалённой карточки\n        setCards((state) =>\n          state.filter((c) => {\n            return c !== removedCard;\n          })\n        );\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsloading(false));\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <div className=\"page__container\">\n          <Switch>\n            <ProtectedRoute\n              exact\n              path=\"/\"\n              loggedIn={loggedIn}\n              component={Main}\n              userEmail={email}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onEditAvatar={handleEditAvatarClick}\n              onCardClick={handleCardClick}\n              cards={cards}\n              onCardLike={handleCardLike}\n              onCardDelete={handleRemoveCardClick}\n              onLogOut={handleLogOut}\n            />\n\n            <Route path=\"/sign-in\">\n              <Login onLogin={handleLogin} />\n            </Route>\n\n            <Route path=\"/sign-up\">\n              <Register\n                onRegister={handleRegister}\n                onInfoTooltip={handleInfoTooltip}\n              />\n            </Route>\n\n            <Route>\n              {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n            </Route>\n          </Switch>\n          {loggedIn && <Footer />}\n        </div>\n      </div>\n\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      <ConfirmPopup\n        isOpen={isConfirmPopupOpen}\n        onClose={closeAllPopups}\n        onClick={handleCardDelete}\n        isLoading={isLoading}\n      />\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n        isLoading={isLoading}\n      />\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n        isLoading={isLoading}\n      />\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlace={handleAddPlaceSubmit}\n        isLoading={isLoading}\n      />\n      <InfoTooltip\n        isOpen={isInfoTooltipOpen}\n        onClose={closeAllPopups}\n        isSignUp={isSignUp}\n        loggedIn={loggedIn}\n      />\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}